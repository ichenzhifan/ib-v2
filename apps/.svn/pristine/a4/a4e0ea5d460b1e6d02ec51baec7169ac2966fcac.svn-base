import { combineReducers } from 'redux';
import { merge, get, set, pick, forEach, isEmpty } from 'lodash';
import { PENDING, DONE, PROGRESS, FAIL } from '../contants/uploadStatus';
import { ADD_IMAGES, UPDATE_IMAGEID, UPDATE_PERCENT, UPLOAD_COMPLETE, UPDATE_FIELDS } from '../contants/actionTypes';
/**
 * 处理上传的图片.
 * @param state
 * @param action
 * @returns {*}
 */
const uploadedImages = (state = [], action) => {
  switch (action.type) {
    case ADD_IMAGES :
      const files = Array.from(action.files);
      const newState = files.map((file)=>{
        return {
          name : file.name,
          guid : '',
          imageId : '',
          xhr : null,
          uploadTime : '',
          status : PENDING,
          totalSize : file.size,
          uploadedSize : 0,
          percent : 0,
          subfix : '%'
        }
      })
      return [
        ...state,
        ...newState
      ];
    case UPDATE_FIELDS:
      const index = state.findIndex((item)=>{
        return item.imageId==action.imageId
      });

      return set(merge([], state), `${index}`,merge({}, state[index], action.fields));
    case UPDATE_IMAGEID :
      return set(merge([], state), `${action.index}.imageId`,action.imageId);
    case UPDATE_PERCENT :
      var index = state.findIndex((item)=>{
        return item.imageId==action.imageId
      });
      action.percent = action.percent == 100 ? 99 : action.percent;
      return set(merge([], state), `${index}.percent`,action.percent);
    default :
      return state;
  }
};

export default uploadedImages;

import { merge, get } from 'lodash';
import { API_SUCCESS } from '../contants/actionTypes';
import { GET_SPEC_DATA } from '../contants/apiUrl';

import { xml2js } from '../utils/xml2js';

const convertOptionGroupToMap = (specObj) => {
  const outMap = {};
  const optionGroup = get(specObj, 'global.options.optionGroup');
  optionGroup.forEach((obj) => {
    const newArray = obj.option.length ? [...obj.option] : [obj.option];
    outMap[obj.id] = newArray;
  });

  return outMap;
};

const spec = (state = {}, action) => {
  switch (action.type) {
    case API_SUCCESS: {
      switch (action.api) {
        case GET_SPEC_DATA: {
          const xmlData = action.response;
          const specObj = xml2js(xmlData)['product-spec'];

          return merge(state, {
            __originalData__: specObj,
            version: get(specObj, 'version'),
            dpi: get(specObj, 'global.dpi'),
            imageQualityBufferPercent: get(specObj,
              'global.imageQualityBufferPercent'),
            optionGroup: convertOptionGroupToMap(specObj)
          });
        }
        default:
          return state;
      }
    }
    default:
      return state;
  }
};


export default spec;
